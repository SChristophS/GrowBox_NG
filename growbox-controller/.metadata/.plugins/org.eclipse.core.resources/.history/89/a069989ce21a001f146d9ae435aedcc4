/*
 * network.c
 *
 *  Created on: May 24, 2024
 *      Author: chris
 */

#include "network.h"
#include <stdio.h>
#include "wizchip_conf.h"
#include "wizchip_init.h"
#include "DHCP/dhcp.h"
#include "stm32f1xx_hal.h"
#include "uart_redirect.h"
#include "dns/dns.h"

wiz_NetInfo defaultNetInfo = { .mac = {0x00,0x08,0xdc,0xff,0xee,0xdd},
							.ip = {192,168,178,100},
							.sn = {255,255,255,0},
							.gw = {192,168,178,1},
							.dns = {8, 8, 8, 8},
							.dhcp = NETINFO_STATIC};

typedef enum {
  OFF = 0,
  ON = 1
} OnOff_State_Type;

extern uint8_t flag_process_dhcp_success;
extern uint8_t flag_process_dns_success;
extern uint8_t data_buf;

uint8_t Domain_IP[4] = {0}; // Translated IP address by DNS Server
uint8_t Domain_name[] = "www.google.com";

void init_network(void) {
	printf("\t - W5x00 Project - \r\n");
    resetAssert();
    HAL_Delay(300);
    resetDeassert();
    HAL_Delay(300);

    printf("\t - Initializing WizChip - \r\n");
    WIZCHIPInitialize();
    printf("\tWizChip version: %.2x\r\n", getVERSIONR());


    wizchip_setnetinfo(&defaultNetInfo);
    printf("\t - Init Network Settings \r\n");
    print_network_information();

    printf("\t - Starting DHCP - \r\n");
	
  if(process_dhcp() == DHCP_IP_LEASED) // DHCP success
  {
	printf(" # DHCP Success\r\n");
    flag_process_dhcp_success = ON;
  }
  else // DHCP failed
  {
	printf(" # DHCP failed\r\n");
	ctlnetwork(CN_SET_NETINFO, &defaultNetInfo); // Set default static IP settings
  }

  printf("Register value after W5x00 initialize!\r\n");
  print_network_information();

  /* DNS client */
  if(process_dns()) // DNS success
  {
	  printf(" # DNS Success\r\n");
    flag_process_dns_success = ON;
  }

  if(flag_process_dhcp_success == ENABLE)
  {
	  printf(" # DHCP IP Leased time : %lu seconds\r\n", getDHCPLeasetime());
  }
  else
  {
    printf(" # DHCP Failed\r\n");
  }

  if(flag_process_dns_success == ENABLE)
  {
    printf(" # DNS: %s => %d.%d.%d.%d\r\n", Domain_name, Domain_IP[0], Domain_IP[1], Domain_IP[2], Domain_IP[3]);
  }
  else
  {
    printf(" # DNS Failed\r\n");
  }
}


